{"name":"Clj-cloud-gen","tagline":"Amazon Web Services (AWS) cloudformation in clojure","body":"# clj-cloud-gen\r\n\r\nA clojure library and application to create and deploy Amazon Web Services cloudformation templates.  \r\nThe json declaritve cloudformation is verbose and obfucates complicated layouts.  By using function graphs\r\nand clojure's ablity to succiently decribe a data schema the specification of the infrastructure is much \r\nreadable, maintable, adaptable\r\n\r\nIt is import to set certian environment variables \r\n\r\nin a .lein-env or profiles.clj file\r\n```clojure\r\n{\r\n:cf-template-bucket-uri \"https://s3.amazonaws.com/cf-templates-replace-me-us-east-1/test-ci-devops\"\r\n:cf-stack-name  \"devops-ci\"\r\n:cf-bucket-name \"cf-templates-replace-me-us-east-1\"\r\n:cf-object-name  \"test-ci-devops\"\r\n:cf-template-path \"cloudformation/test_result.json\"\r\n}\r\n\r\n```\r\n\r\n## Usage\r\n```clojure\r\n\r\n(ns clj-cloud-gen.cloud-specification\r\n  (:require [plumbing.core :as p :refer [fnk]]\r\n            [plumbing.graph :as graph]))\r\n\r\n(def static-cfgs\r\n  {\r\n   :gateway {:default-gateway {}}\r\n\r\n   :internet {:default-connection {:vpc-id :devops\r\n                                   :internet-gateway-id :default-gateway}}\r\n\r\n   :route-table {:public-table {:vpc-id :devops}\r\n                 :private-table {:vpc-id :devops}}\r\n\r\n   :route {:public-route {:depends-on :default-connection\r\n                          :route-table-id :public-table\r\n                          :destination-cidr-block \"0.0.0.0/0\"\r\n                          :gateway-id :default-gateway}\r\n           :private-route {:route-table-id :private-table\r\n                           :destination-cidr-block \"0.0.0.0/0\"\r\n                           :instance-id :nat-node}}\r\n\r\n   :subnet-route-table {:private-subnet-route {:subnet-id :private-subnet\r\n                                               :route-table-id :private-table}\r\n                        :public-subnet-route  {:subnet-id :public-subnet\r\n                                               :route-table-id :public-table}}\r\n\r\n   :ip {:nat-ip-address {:depends-on :default-connection\r\n                         :domain \"vpc\"\r\n                         :instance-id :nat-node}}\r\n   })\r\n\r\n(def parameteric-cfgs\r\n  {:format\r\n   (p/fnk [])\r\n\r\n   :vpc\r\n   (p/fnk [mappings]\r\n          {:devops {:cidr-block (-> mappings :subnet-config :vpc :cidr)}})\r\n\r\n   :subnet\r\n   (p/fnk [parameters mappings]\r\n          {:public-subnet {:vpc-id :devops :cidr-block (-> mappings :subnet-config :public :cidr)}\r\n           :private-subnet {:vpc-id :devops :cidr-block (-> mappings :subnet-config :private :cidr)}})\r\n\r\n   :security-group\r\n   (p/fnk [parameters]\r\n          (let [{:keys [ssh-from]} parameters]\r\n            {:web {:vpc-id :devops :group-description \"Enable  SSH access from anywhere\"\r\n                   :security-group-ingress [{:ip-protocol \"tcp\" :from-port \"22\" :to-port \"22\" :cidr-ip ssh-from}\r\n                                            {:ip-protocol \"tcp\" :from-port \"80\" :to-port \"80\" :cidr-ip \"0.0.0.0/0\"}\r\n                                            {:ip-protocol \"tcp\" :from-port \"443\":to-port \"443\" :cidr-ip \"0.0.0.0/0\"}]}\r\n             :nat  {:vpc-id :devops :group-description \"NAT \"\r\n                    :security-group-ingress [{:ip-protocol \"icmp\" :from-port \"-1\" :to-port \"-1\" :cidr-ip \"0.0.0.0/0\"}\r\n                                             {:ip-protocol \"tcp\" :from-port \"22\" :to-port \"22\" :cidr-ip ssh-from}\r\n                                             {:ip-protocol \"tcp\" :from-port \"80\" :to-port \"80\" :cidr-ip \"0.0.0.0/0\"}\r\n                                             {:ip-protocol \"tcp\" :from-port \"443\":to-port \"443\" :cidr-ip \"0.0.0.0/0\"}]}\r\n             :database {:vpc-id :devops :group-description \"Pass all traffic\"\r\n                        :security-group-ingress [{:ip-protocol \"tcp\" :from-port \"3306\" :to-port \"3306\" :cidr-ip \"0.0.0.0/0\"}]}\r\n             }))\r\n\r\n   :node\r\n   (p/fnk [parameters subnet mappings security-group]\r\n          {:web-node  {:key-name (-> parameters :key-name)\r\n                       :instance-type \"c3.large\"\r\n                       :subnet-id :private-subnet\r\n                       :private-ip-address (-> mappings :subnet-config :private :default :ip :private)\r\n                       :source-dest-check \"false\"\r\n                       :image-id  (-> mappings :image :web-node :ami)\r\n                       :security-group-ids [:web]}\r\n           :nat-node {:key-name (-> parameters :key-name)\r\n                      :instance-type (-> parameters :instance-type)\r\n                      :subnet-id :public-subnet\r\n                      :private-ip-address (-> mappings :subnet-config :public :nat :ip :private)\r\n                      :source-dest-check \"false\"\r\n                      :security-group-ids [:nat]\r\n                      :image-id  (-> mappings :image :nat-node :ami)}})\r\n\r\n   :volume\r\n   (p/fnk [parameters mappings]\r\n          {:default-volume {:size  (-> mappings :image-id :web-node :volume :size)\r\n                            :depends-on :web-node\r\n                            :availability-zone (-> mappings :availability-zone)}})\r\n\r\n   :volume-attachment\r\n   (p/fnk [mappings]\r\n          {:instance-mount-point {:instance-id :web-node\r\n                                  :volume-id :default-volume\r\n                                  :device (-> mappings :image :web-node :volume :mount-point)}})\r\n   :resources\r\n   (p/fnk [vpc subnet internet gateway route-table route security-group node ip volume volume-attachment subnet-route-table :as args]\r\n          args\r\n          )\r\n   }\r\n  )\r\n                                                \r\n(def json-template (assemble-cloudformation parameteric-cfgs static-cfgs test-cfgs))                                                \r\n```\r\n\r\n## License\r\n\r\nCopyright Â© 2015 Matthew Burns All rights reserved.\r\n\r\nDistributed under the Eclipse Public License either version 1.0 or (at\r\nyour option) any later version.\r\n","google":"UA-67852560-1","note":"Don't delete this file! It's used internally to help with page regeneration."}